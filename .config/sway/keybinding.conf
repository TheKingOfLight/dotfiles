#
#________________________________________________________________
#________________________________________________________________
#
# Sway Keybinding config
# vers. 0.0.3
# Author: King of the light
# License: Unlicense
# 
#________________________________________________________________
#________________________________________________________________
#




#
#________________________________________________________________
# Defaults / Variables
#

# MODE Key for managing setup (stack, tab, ...)
set $manage Alt

# Applications
set $TERMINAL alacritty 
set $FILE_MANAGER nemo
set $FILE_MANAGER_ROOT nemo /
set $BROWSER firefox

# Direction keys
set $LEFT h
set $DOWN j
set $UP k
set $RIGHT l


#
#________________________________________________________________
# Navigation
#

# change focus
bindsym $mod+$LEFT focus left
bindsym $mod+$DOWN focus down
bindsym $mod+$UP focus up
bindsym $mod+$RIGHT focus right

# allow can use the cursor keys for navigation:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$LEFT move left
bindsym $mod+Shift+$DOWN move down
bindsym $mod+Shift+$UP move up
bindsym $mod+Shift+$RIGHT move right

# allow can use the cursor keys for navigation:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# switch to window
# to urgent window (latest)
bindsym $mod+numbersign [urgent=latest] focus

# move Workspace to next monitor
bindsym $mod+Next move workspace to output next

# Cycle through workspaces
bindsym $mod+tab workspace next_on_output
bindsym $mod+Shift+tab workspace prev_on_output

# Toggle notification bar
bindsym $mod+Shift+n exec "swaync-client -t -sw"

#
#________________________________________________________________
# Window managment
#

# kill focused window
bindsym $mod+q kill

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+$manage+s layout stacking
bindsym $mod+$manage+w layout tabbed
bindsym $mod+$manage+e layout toggle split

# split in horizontal orientation
bindsym $mod+$manage+h splith
# split in vertical orientation
bindsym $mod+$manage+v splitv

# focus the parent container
	#bindsym $mod+a focus parent
# focus the child container
	#bindsym $mod+d focus child
# Swap focus between the tiling area and the floating area
	#bindsym $mod+space focus mode_toggle


#
#__________________________________________________________________________
# Shortcuts
#

# Own scripts
	# bindsym $mod+KP_Insert exec $TERMINAL --  bash clear && neofetch && read line
	# bindsym $mod+KP_Insert exec $TERMINAL --  bash -c 'neofetch && read line'
# Update
bindsym $mod+KP_Down exec $TERMINAL --hold -e .local/bin/update.sh

# start application
bindsym $mod+Return exec $TERMINAL
bindsym $mod+o exec $FILE_MANAGER
bindsym $mod+Shift+o exec $FILE_MANAGER_ROOT
bindsym $mod+b exec $BROWSER


#
#__________________________________________________________________________
# Screenshot
# Thanks to the openSUSEway project by openSUSE
#

# Set the directory the screenshot should be saved
set $screenshot_dir $(xdg-user-dir PICTURES)/screenshot
set $screenshot_time $(date +%Y-%m-%d_%H-%M-%S)

# Find selected/focused window/output 
set $selected_window swaymsg -t get_tree | jq -r '.. | select(.pid? and .visible?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | slurp
set $focused_window swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"'
set $focused_output swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name'

# Define different screenshot modes
set $screenshot_full grim $screenshot_dir/$screenshot_time_full.png
set $screenshot_full_clipboard grim - | wl-copy
set $screenshot_selected_window $selected_window | grim -g- $screenshot_dir/$screenshot_time_window.png
set $screenshot_selected_window_clipboard $selected_window | grim -g- - | wl-copy
set $screenshot_selected_area slurp | grim -g- $screenshot_dir/$screenshot_time_area.png
set $screenshot_selected_area_clipboard slurp | grim -g- - | wl-copy
set $screenshot_focused_window $focused_window | grim -g- $screenshot_dir/$screenshot_time_$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).app_id').png 
set $screenshot_focused_window_clipboard $focused_window | grim -g- - | wl-copy
set $screenshot_focused_output grim -o $($focused_output) $screenshot_dir/$screenshot_time_$($focused_output).png
set $screenshot_focused_output_clipboard grim -o $($focused_output) - | wl-copy

# Enter screenshot mode menu
set $screenshot "Screenshot: (f) full, (s) select window, (a) select area, (w) focused window, (o) focused output [Ctrl+ saves to clipboard]"
mode $screenshot {
    # Full
    bindsym f exec $screenshot_full; mode "default"
    bindsym Ctrl+f exec $screenshot_full_clipboard; mode "default"
    # Selected window
    bindsym s exec $screenshot_selected_window; mode "default"
    bindsym Ctrl+s exec $screenshot_selected_window_clipboard; mode "default"
    # Selected area
    bindsym a exec $screenshot_selected_area; mode "default"
    bindsym Ctrl+a exec $screenshot_selected_area_clipboard; mode "default"
    # Focused window
    bindsym w exec $screenshot_focused_window; mode "default"
    bindsym Ctrl+w exec $screenshot_focused_window_clipboard; mode "default"
    # Focused output
    bindsym o exec $screenshot_focused_output; mode "default"
    bindsym Ctrl+o exec $screenshot_focused_output_clipboard; mode "default"

    # Exit screenshot mode menu
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+Print mode "default"
}

# Set keybinding to screenshots
bindsym $mod+s exec $screenshot_selected_area_clipboard
bindsym $mod+Shift+s exec $screenshot_selected_area

bindsym $mod+Print exec $screenshot_focused_output
bindsym $mod+Shift+Print exec $screenshot_full

bindsym $mod+Insert mode $screenshot
bindsym $mod+Shift+Insert exec $screenshot_focused_window_clipboard


# Deprcated
# clipboard
# bindsym $mod+s exec grim -g "$(slurp)" - | wl-copy
# bindsym $mod+Shift+s exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | selected(.focused) |.name') - | wl-copy
#save
# bindsym $mod+Print exec --no-startup-id maim "/home/$USER/Picturers/Screenshot/Display $(date +%Y-%m-%d\ %H:%M:%S).png" 
# bindsym $mod+Shift+Insert exec --no-startup-id maim --window $(xdotool getactivewindow) "/home/$USER/Pictures/Screenshot/$(xdotool getactivewindow getwindowname | sed 's/[^a-zA-Z0-9]/_/g') $(date +%Y-%m-%d\ %H:%M:%S).png"


#
#__________________________________________________________________________
# sway management
#

# Reload the configuration file
bindsym $mod+Shift+c reload

# Logout / Shutdown
# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'Do you really want to exit sway? This will end your X session (logout).' -B 'Yes, exit i3' 'swaymsg exit'

# System mode menu
bindsym $mod+Shift+END mode $power_system
set $power_system "What to do? (l) lock, (s) shutdown, (r) reboot,(e) logout,  (p) suspend"
mode $power_system {
	bindsym l exec 'swaylock -f -c 000000'; mode "default"
	bindsym s exec systemctl poweroff; mode "default"
	bindsym r exec systemctl reboot; mode "default"
	bindsym e exec swaymsg exit; mode "default"
	bindsym p exec systemctl suspend; mode "default"

	# back to normal: Enter or Escape
	bindsym Return mode "default"
	bindsym Escape mode "default"
}

# open rofi-power-menu
bindsym $mod+Shift+DELETE exec '$HOME/.config/wofi/scripts/power-menu.sh'
# bindsym $mod+Shift+Delete exec "wofi -show power-menu -modi power-menu:$HOME/.config/wofi/scripts/rofi-power-menu/wofi-power-menu  --choices=shutdwn/reboot/logout/lockscreen/suspend/hibernate"

#
#__________________________________________________________________________
# Resize
#

# Enter Resize-Mode with $mod+r
	bindsym $mod+r mode "resize"

# Resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $LEFT resize shrink width 10 px or 10 ppt
        bindsym $UP resize grow height 10 px or 10 ppt
        bindsym $DOWN resize shrink height 10 px or 10 ppt
        bindsym $RIGHT resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}


#
#__________________________________________________________________________
# Floating
#

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# Change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle


#
#__________________________________________________________________________
# Scratchpad
#

# Make the currently focused window a scratchpad
	bindsym $mod+minus move scratchpad
# Show first scratchpad window
	bindsym $mod+Shift+minus scratchpad show 


#
#__________________________________________________________________________
# Workspaces
#

# Define names for default workspaces for which we configure key bindings later on.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $ws11 "11"
set $ws12 "12"
set $ws13 "13"
set $ws14 "14"
set $ws15 "15"
set $ws16 "16"
set $ws17 "17"
set $ws18 "18"
set $ws19 "19"
set $ws20 "20"

# Switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+mod2+KP_1 workspace number $ws11
bindsym $mod+mod2+KP_2 workspace number $ws12
bindsym $mod+mod2+KP_3 workspace number $ws13
bindsym $mod+mod2+KP_4 workspace number $ws14
bindsym $mod+mod2+KP_5 workspace number $ws15
bindsym $mod+mod2+KP_6 workspace number $ws16
bindsym $mod+mod2+KP_7 workspace number $ws17
bindsym $mod+mod2+KP_8 workspace number $ws18
bindsym $mod+mod2+KP_9 workspace number $ws19
bindsym $mod+mod2+KP_0 workspace number $ws20

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+Shift+mod2+KP_1 move container to workspace number $ws11
bindsym $mod+Shift+mod2+KP_2 move container to workspace number $ws12
bindsym $mod+Shift+mod2+KP_3 move container to workspace number $ws13
bindsym $mod+Shift+mod2+KP_4 move container to workspace number $ws14
bindsym $mod+Shift+mod2+KP_5 move container to workspace number $ws15
bindsym $mod+Shift+mod2+KP_6 move container to workspace number $ws16
bindsym $mod+Shift+mod2+KP_7 move container to workspace number $ws17
bindsym $mod+Shift+mod2+KP_8 move container to workspace number $ws18
bindsym $mod+Shift+mod2+KP_9 move container to workspace number $ws19
bindsym $mod+Shift+mod2+KP_0 move container to workspace number $ws20


